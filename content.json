{"meta":{"title":"android开发之路","subtitle":"Talk is cheap,show me your code!","description":null,"author":"张昊","url":"http://yoursite.com"},"pages":[{"title":"标签~","date":"2017-03-23T16:18:33.000Z","updated":"2017-03-23T16:18:59.000Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"换mac啦","slug":"换mac啦","date":"2017-03-21T14:23:28.000Z","updated":"2017-03-23T16:20:46.000Z","comments":true,"path":"2017/03/21/换mac啦/","link":"","permalink":"http://yoursite.com/2017/03/21/换mac啦/","excerpt":"一、写在前面的废话 经历了一周的纠结，也错失几个好价，我终于狠下心，咬紧牙，一把掏出钱包，不对，是掏出手机付款了。机器到手后，所有的心疼瞬间丢到召唤师峡谷，太TM爽了！入眼的是无任何颗粒感的视网膜屏，双手放在键盘上，手掌能感受到带有丝丝凉意的金属质感，手指码字根本停不下来。我想，我终于理解那些推荐MBP的人了。","text":"一、写在前面的废话 经历了一周的纠结，也错失几个好价，我终于狠下心，咬紧牙，一把掏出钱包，不对，是掏出手机付款了。机器到手后，所有的心疼瞬间丢到召唤师峡谷，太TM爽了！入眼的是无任何颗粒感的视网膜屏，双手放在键盘上，手掌能感受到带有丝丝凉意的金属质感，手指码字根本停不下来。我想，我终于理解那些推荐MBP的人了。 二、一些常用快捷键 入手才三天，覆盖全部快捷键是不现实的，暂时把常用的列举一下，以后再慢慢补充吧。 command + shift + 3/4 截屏/截图 command + m 最小化窗口 command + h 隐藏窗口 command + q 关闭当前程序 command + r 刷新 command + t/w 新建一个选项卡/关闭当前选项卡 上面是我这几天用的最多的，在知乎上看到一张图，基本上涵盖了最常用的吧： 三、开发环境的搭建 公司项目用的 Android 原生和 React Native混合开发的模式，所以需要搭建 Android 环境和 RN 环境。 Google 了一下，发现苹果有个软件包管理工具 Homebrew 很好用，装上试试 Homebrew是Mac OSX上的软件包管理工具，能在Mac中方便的安装软件或者卸载软件，相当于linux下的apt-get、yum神器；Homebre可以在Mac上安装一些OS X没有的UNIX工具，Homebrew将这些工具统统安装到了 /usr/local/Cellar 目录中，并在 /usr/local/bin 中创建符号链接。 安装很简单，一行指令即可，虽然不懂啥意思… ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot; HomeBrew常用指令 brew search xxx 搜索软件 brew install xxx 安装 brew cask install xxx 安装软件 与上面的区别我不懂，知乎上有两个回答供参考传送门 brew uninstall xxx 卸载 brew list 显示已经安装的软件 我手上这台机器是 os x 10.12.3的，没有自带 Java，所以我们需要手动安装。我们可以去 oracle 官网下载 jdk for mac，也可以用上面提到的 brew cask install java 来进行安装。我没有配置 java 的环境变量，似乎也能用 java -version，神奇。 android studio 直接下载 .dmg 文件即可，它自动设置了 java 的路径，然后 sdk可以通过studio下载或者找个国内镜像网站下好后放到 sdk 目录下。 RN 环境搭建，可参考传送门。我简单说下步骤： 安装 node.js ,直接brew install node走你。 安装后，给 npm 设置镜像（GFW你懂得） npm config set registry https://registry.npm.taobao.org --global npm config set disturl https://npm.taobao.org/dist --global 安装 react native 命令行工具 npm install -g react-native-cli 四、终端的 bogon 今晚回家打开终端后，发现终端名称变成了 bogon, what?这他么是啥，搜了一下，找到个解决方案传送门。我用的第一种方法，scutil --set HostName new_hostname ，亲测可行。","categories":[],"tags":[{"name":"Mac","slug":"Mac","permalink":"http://yoursite.com/tags/Mac/"}]},{"title":"ARGB与RGBA","slug":"ARGB与RGBA","date":"2017-03-01T14:40:39.000Z","updated":"2017-03-01T15:39:26.000Z","comments":true,"path":"2017/03/01/ARGB与RGBA/","link":"","permalink":"http://yoursite.com/2017/03/01/ARGB与RGBA/","excerpt":"一、写在前面的废话​ 今天在rn中调整一个view的backgroudColor时，想设置透明度适中的色值，习惯性的写成’#77000000’，这在Android项目的xml文件中是没问题的，但是放在js文件的Style中就是不起作用，查了一下，有argb和rgba两种格式的。","text":"一、写在前面的废话​ 今天在rn中调整一个view的backgroudColor时，想设置透明度适中的色值，习惯性的写成’#77000000’，这在Android项目的xml文件中是没问题的，但是放在js文件的Style中就是不起作用，查了一下，有argb和rgba两种格式的。 二、ARGB​ 在Android中颜色值通常遵循RGB/ARGB的标准，以“#”开头，以16进制表示，常用的格式为 1234#RGB#RRGGBB#ARGB#AARRGGBB ​ 上面四个字母都很容易理解，分别是Alpha,Red,Green,Blue。透明度分为256阶（0-255），计算机上用16进制表示为（00-ff）。透明就是0阶，不透明就是255阶,如果50%透明就是127阶。 三、RGBA​ 这四个字母的意思跟上面讲的完全一样，只是透明度放到了最后。粗略的查了一下，RGBA是CSS3标准（这属于前端的知识范畴了，有机会再去学习）新增的，CSS2中色彩模式只有RGB色彩模式和十六进制模式。 ​ 我个人理解，这两种格式只是顺序上不同，应用于不同的编程语言中。需要记住，react native中是将表示透明度的两位十六进制放在最后的。","categories":[],"tags":[{"name":"react native","slug":"react-native","permalink":"http://yoursite.com/tags/react-native/"}]},{"title":"清单文件中activity属性windowSoftInputMode研究","slug":"清单文件中activity属性windowSoftInputMode研究","date":"2017-02-20T16:15:08.000Z","updated":"2017-02-21T16:02:54.000Z","comments":true,"path":"2017/02/21/清单文件中activity属性windowSoftInputMode研究/","link":"","permalink":"http://yoursite.com/2017/02/21/清单文件中activity属性windowSoftInputMode研究/","excerpt":"一、写在前面的废话: 今天研究聊天详情页时，发现点击输入框获得焦点后，弹起的软键盘没有盖住EditText,而是将输入框顶了上去。一番搜索，原来是通过在清单文件中给对应activity设置属性windowSoftInputMode做到的。接下来就研究一下这个属性吧。","text":"一、写在前面的废话: 今天研究聊天详情页时，发现点击输入框获得焦点后，弹起的软键盘没有盖住EditText,而是将输入框顶了上去。一番搜索，原来是通过在清单文件中给对应activity设置属性windowSoftInputMode做到的。接下来就研究一下这个属性吧。 二、知识点：​ windowSoftInputMode可以取九个值，分别是： android:windowSoftInputMode=[&quot;stateUnspecified&quot;, &quot;stateUnchanged&quot;, &quot;stateHidden&quot;, &quot;stateAlwaysHidden&quot;, &quot;stateVisible&quot;, &quot;stateAlwaysVisible&quot;, &quot;adjustUnspecified&quot;, &quot;adjustResize&quot;, &quot;adjustPan&quot;] ​ 从命名就可以看出，前六个值跟状态有关，后三个值跟布局的调整有关。关于这两类取值，可以看google官方API给出的解释: The state of the soft keyboard — whether it is hidden or visible — when the activity becomes the focus of user attention.The adjustment made to the activity’s main window — whether it is resized smaller to make room for the soft keyboard or whether its contents pan to make the current focus visible when part of the window is covered by the soft keyboard. ​ 前者是当activity获得用户的焦点时，软键盘是弹出还是隐藏；后者是，当软键盘弹出的时候，当前activity的主窗口是否缩小布局以使软键盘有足够的空间展示，或者使布局里的内容向上滑动以使当前获得焦点的View可见。 The setting must be one of the values listed in the following table, or a combination of one “state...“ value plus one “adjust...“ value. Setting multiple values in either group — multiple “state...“ values, for example — has undefined results. Individual values are separated by a vertical bar (|). For example: ​ 这段话指出，这个属性必须从九个值里取，可以只取一个值，也可以是 state…与adjust的组合，如下： 1&lt;activity android:windowSoftInputMode=\"stateVisible|adjustResize\" . . . &gt; ​ 关于九个值各自的介绍，官方也给出了解释： Value Description stateUnspcified The state of the soft keyboard (whether it is hidden or visible) is not specified. The system will choose an appropriate state or rely on the setting in the theme.This is the default setting for the behavior of the soft keyboard. (这个是默认缺省属性值，显示或者隐藏由系统来确定，或者由当前主题来确定) stateUnchanged The soft keyboard is kept in whatever state it was last in, whether visible or hidden, when the activity comes to the fore.(经测试，似乎没什么卵用。) stateHidden The soft keyboard is hidden when the user chooses the activity — that is, when the user affirmatively navigates forward to the activity, rather than backs into it because of leaving another activity. stateAlwaysHidden The soft keyboard is always hidden when the activity’s main window has input focus. stateVisible The soft keyboard is visible when that’s normally appropriate (when the user is navigating forward to the activity’s main window). stateAlwaysVisible The soft keyboard is made visible when the user chooses the activity — that is, when the user affirmatively navigates forward to the activity, rather than backs into it because of leaving another activity.(设置了这个值或上一个，通过测试发现，进入activity后，软键盘会自动弹起。而设置stateHidden和stateAlwaysHidden则不会。) adjustUnspecified It is unspecified whether the activity’s main window resizes to make room for the soft keyboard, or whether the contents of the window pan to make the current focus visible on-screen. The system will automatically select one of these modes depending on whether the content of the window has any layout views that can scroll their contents. If there is such a view, the window will be resized, on the assumption that scrolling can make all of the window’s contents visible within a smaller area.This is the default setting for the behavior of the main window.(缺省值，到底是缩小布局还是滚动布局中获得焦点控件以上的组件，取决于当前布局中是否有可以滚动的View。) adjustResize The activity’s main window is always resized to make room for the soft keyboard on screen.(触发View的onSizeChanged方法，布局高度缩小了，给软键盘腾出空间。) adjustPan The activity’s main window is not resized to make room for the soft keyboard. Rather, the contents of the window are automatically panned so that the current focus is never obscured by the keyboard and users can always see what they are typing. This is generally less desirable than resizing, because the user may need to close the soft keyboard to get at and interact with obscured parts of the window. ​ 妈蛋的，上面的属性值我挨个试了一遍，但与它给出的结果不一致，我都糊涂了。不过，我发现几个比较靠谱的规律： 用的比较多的是adjustResize和adjustPan，前者是缩小布局得大小，后者是向上移动焦点控件之上的View。 当布局中，焦点组件上方有可滚动的View时，设置为adjustPan，会将当前焦点组件上方的所有View向上移动，以使得焦点组件完全露出，且焦点组件下方的View被软键盘遮盖，这种会导致View被顶出界面；设置为adjustResize，可滚动的View会缩小其高度，给软键盘腾出空间，然后其中焦点组件上方的View会向上滚动，这样可滚动的View上方的View不会滚动，即保持位置不变。 如果焦点组件上方没有可滚动的View，设置为adjustPan，跟上面效果一样；设置为adjustResize，不起作用，焦点组件被盖住了！","categories":[{"name":"android","slug":"android","permalink":"http://yoursite.com/categories/android/"}],"tags":[{"name":"android","slug":"android","permalink":"http://yoursite.com/tags/android/"}]},{"title":"第一篇——利用hexo和github搭建静态博客","slug":"第一篇——利用hexo和github搭建静态博客","date":"2017-02-19T15:52:16.000Z","updated":"2017-02-19T16:11:28.000Z","comments":true,"path":"2017/02/19/第一篇——利用hexo和github搭建静态博客/","link":"","permalink":"http://yoursite.com/2017/02/19/第一篇——利用hexo和github搭建静态博客/","excerpt":"","text":"最近一周，只有在公司的时候写了代码，效率也不高，某些逻辑我还是一团浆糊。回到家也没有接触别的知识，惭愧不已，惴惴不安，这个周日的晚上逼自己将4个月前挖的坑填上，利用hexo和github pages 搭建自己的静态Blog。 教程可以参考这篇文章 传送门 。 坑还没有填满，下次再研究一下： md的语法 添加评论的功能—多说 不蒜子的统计 主题美化","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"}]}]}